--- a/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c
+++ b/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c
@@ -101,8 +101,8 @@
 
 /* -------------------------------------------------------------------------*/
 
-static __printf(3, 4)
-int bh_event_add_var(struct bh_event *event, int argv, const char *format, ...)
+static int bh_event_add_var(struct bh_event *event, int argv,
+		const char *format, ...)
 {
 	static char buf[128];
 	char *s;
@@ -117,7 +117,8 @@
 	va_end(args);
 
 	if (len >= sizeof(buf)) {
-		WARN(1, "buffer size too small");
+		BH_ERR("buffer size too small\n");
+		WARN_ON(1);
 		return -ENOMEM;
 	}
 
@@ -383,18 +384,7 @@
 		button = &pdata->buttons[i++];
 
 		button->gpio = of_get_gpio_flags(pp, 0, &flags);
-		if (button->gpio < 0) {
-			error = button->gpio;
-			if (error != -ENOENT) {
-				if (error != -EPROBE_DEFER)
-					dev_err(dev,
-						"Failed to get gpio flags, error: %d\n",
-						error);
-				return ERR_PTR(error);
-			}
-		} else {
-			button->active_low = flags & OF_GPIO_ACTIVE_LOW;
-		}
+		button->active_low = flags & OF_GPIO_ACTIVE_LOW;
 
 		if (of_property_read_u32(pp, "linux,code", &button->code)) {
 			dev_err(dev, "Button without keycode: 0x%x\n",
@@ -555,17 +545,20 @@
 		struct gpio_keys_button *button = &pdata->buttons[i];
 		struct gpio_keys_button_data *bdata = &bdev->data[i];
 
+		if (bdata->can_sleep) {
+			dev_err(&pdev->dev, "skipping gpio:%d, it can sleep\n", button->gpio);
+			continue;
+		}
 		if (!button->irq)
 			button->irq = gpio_to_irq(button->gpio);
 		if (button->irq < 0) {
 			dev_err(&pdev->dev, "failed to get irq for gpio:%d\n", button->gpio);
 			continue;
 		}
-
-		ret = devm_request_threaded_irq(&pdev->dev, button->irq, NULL, button_handle_irq,
-						IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
-						dev_name(&pdev->dev), bdata);
-		if (ret < 0)
+		ret = devm_request_irq(&pdev->dev, button->irq, button_handle_irq,
+					IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+					dev_name(&pdev->dev), bdata);
+		if (ret)
 			dev_err(&pdev->dev, "failed to request irq:%d for gpio:%d\n", button->irq, button->gpio);
 		else
 			dev_dbg(&pdev->dev, "gpio:%d has irq:%d\n", button->gpio, button->irq);
